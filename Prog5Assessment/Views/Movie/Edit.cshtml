@model Prog5Assessment.Models.Movie

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Movie</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RoomId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("roomsdropdown", new SelectList(ViewBag.rooms, "Id", "Name", ViewBag.roomId))
            @Html.ValidationMessageFor(model => model.RoomId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Date, new { @class = "datepicker" })
            @Html.ValidationMessageFor(model => model.Date)
        </div>
        <script>
            $(function () {
                
                var correctDate = dateConvert($(".datepicker").val());
                //$(".datepicker").val(correctDate);
             
                $(".datepicker").datetimepicker({
                    value:correctDate,
                    formatTime: 'H:i',
                    formatDate: 'Y-m-d',
                    step: 5,
                    inline: true,
                    onChangeDateTime: function (dp, $input) {
                        $(".datepicker").val($input.val());
                    }
                });
            });
            function dateConvert(value)
            {
                var datetime = value.split(' ');
                var datevalues = datetime[0].split('-');
                var timevalues = datetime[1].split(':');

                if (datevalues[0].length > 2)
                {
                    return value;
                }
                var date = new Date(datevalues[2], datevalues[1], datevalues[0]);

                var year = date.getFullYear();

                var month = date.getMonth();
                if (month <= 9)
                    month = '0' + month;

                var day = date.getDate();
                if (day <= 9)
                    day = '0' + day;

                var prettyDate = year + '/' + month + '/' + day + " " + timevalues[0] + ":" + timevalues[1];
                return prettyDate;
            }
        </script>
        <div class="editor-label">
            @Html.LabelFor(model => model.Duration)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Duration)
            @Html.ValidationMessageFor(model => model.Duration)
        </div>

        <p>
            <input type="submit" value="Edit" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
